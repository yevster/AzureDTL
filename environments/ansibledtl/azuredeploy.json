{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "machineName": {
            "type": "string",
            "metadata": {
                "description": "The machine name."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The admin username."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/yevster/dtl-ansible/master/environments/ansibledtl"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
  "variables": {
    "resourcePrefix": "[take(concat('al', uniqueString(resourceGroup().id)),10)]",
    "vmName": "[parameters('machineName')]",
    "linuxVmName": "[concat(parameters('machineName'), '-linux')]",
    "storageAccountName": "[toLower(variables('vmName'))]",
    "storageAccountType": "Standard_LRS",
    "osDiskName": "[concat(variables('vmName'), '-dsk')]",
    "linuxOsDiskName": "[concat(variables('vmName'), '-dsk-linux')]",
    "publicIPAddressName": "[concat(variables('vmName'), '-pip')]",
    "linuxPublicIPAddressName": "[concat(variables('vmName'), '-pip-linux')]",
    "publicIPAddressDNS": "[toLower(concat(variables('vmName'), ''))]",
    "linuxPublicIPAddressDNS": "[toLower(concat(variables('vmName'), '-linux'))]",
    "virtualNetworkName": "[concat(variables('vmName'), '-vnet')]",
    "networkSecurityGroupName": "[concat(variables('vmName'), '-nsg')]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "linuxNicName": "[concat(variables('vmName'), '-nic-linux')]",
    "vNetAddressPrefixes": "192.168.42.0/24",
    "sNetAddressPrefixes": "192.168.42.0/24",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSKU": "16.04-LTS"
  },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('linuxPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('linuxPublicIPAddressDNS')]"
                }
            }
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicIPAddressDNS')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "NSG - Front End"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-rule",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "rdp-rule",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-01-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vNetAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "ansible",
                        "properties": {
                            "addressPrefix": "[variables('sNetAddressPrefixes')]",
                            "serviceEndpoints": [
                                {
                                  "service": "Microsoft.Sql",
                                  "locations": [
                                    "[resourceGroup().location]"
                                  ]
                                }
                              ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('linuxNicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('linuxPublicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'ansible')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2016-09-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'ansible')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('linuxVmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('linuxNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('linuxVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[variables('linuxOsDiskName')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('linuxNicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "name": "Initialize",
                    "apiVersion": "2015-06-15",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('linuxVmName'))]",
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.0",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[concat(parameters('_artifactsLocation'), '/azuredeploy.sh', parameters('_artifactsLocationSasToken'))]"
                            ],
                            "commandToExecute": "bash azuredeploy.sh"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2016-Datacenter",
                    "version": "latest"
                  },
                    "osDisk": {
                        "name": "[variables('osDiskName')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "Setup",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2016-03-30",
                    "dependsOn": [
                      "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                    ],
                    "tags": {
                      "displayName": "Setup"
                    },
                    "properties": {
                      "publisher": "Microsoft.Compute",
                      "type": "CustomScriptExtension",
                      "typeHandlerVersion": "1.4",
                      "autoUpgradeMinorVersion": true,
                      "settings": {
                        "fileUris": [
                            "[concat(parameters('_artifactsLocation'), '/azuredeploy.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/Artifactfile.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/ChocolateyPackageInstaller.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/installAnsibleExtension.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/installVSCode.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/Prepare-VM.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/startChocolatey.ps1', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/vscode.inf', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/vscoss.vscode-ansible.zip', parameters('_artifactsLocationSasToken'))]",
                            "[concat(parameters('_artifactsLocation'), '/VSCodeSetup.exe', parameters('_artifactsLocationSasToken'))]"
                        ],
                        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command \"& { $script = gci -Filter Prepare-VM.ps1 -Recurse | sort -Descending -Property LastWriteTime | select -First 1 -ExpandProperty FullName; iex $script ', '}\"')]"
                      }
                    }
                }
            ]
        }
    ],
    "outputs": {}
}